{
	"info": {
		"_postman_id": "cd5579ff-8716-41ff-8693-584a572ba58b",
		"name": "Bank System - Account Ms",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26533920"
	},
	"item": [
		{
			"name": "Accounts",
			"item": [
				{
					"name": "accountMs - has account boolean",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURLaccounts}}/accounts/customer/1",
							"host": [
								"{{baseURLaccounts}}"
							],
							"path": [
								"accounts",
								"customer",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "accounts - get all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    ",
									"    responseData.forEach(function(account) {",
									"        pm.expect(account).to.have.property('accountId');",
									"        pm.expect(account).to.have.property('accountNumber');",
									"        pm.expect(account).to.have.property('balance');",
									"        pm.expect(account).to.have.property('accountType');",
									"        pm.expect(account).to.have.property('customerId');",
									"    });",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURLaccounts}}/accounts",
							"host": [
								"{{baseURLaccounts}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "account - get by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.property('accountId');",
									"    pm.expect(responseData).to.have.property('accountNumber');",
									"    pm.expect(responseData).to.have.property('balance');",
									"    pm.expect(responseData).to.have.property('accountType');",
									"    pm.expect(responseData).to.have.property('customerId');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURLaccounts}}/accounts/1",
							"host": [
								"{{baseURLaccounts}}"
							],
							"path": [
								"accounts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "account - create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"balance\": 1000.0,\n    \"accountType\": \"SAVINGS\",\n    \"customerId\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLaccounts}}/accounts",
							"host": [
								"{{baseURLaccounts}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "account - deposit amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.property('accountId');",
									"    pm.expect(responseData).to.have.property('accountNumber');",
									"    pm.expect(responseData).to.have.property('balance');",
									"    pm.expect(responseData).to.have.property('accountType');",
									"    pm.expect(responseData).to.have.property('customerId');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 100.0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLaccounts}}/accounts/1/deposit",
							"host": [
								"{{baseURLaccounts}}"
							],
							"path": [
								"accounts",
								"1",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "account - withdraw amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.accountId).to.exist;",
									"    pm.expect(responseData.accountNumber).to.exist;",
									"    pm.expect(responseData.balance).to.exist;",
									"    pm.expect(responseData.accountType).to.exist;",
									"    pm.expect(responseData.customerId).to.exist;",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 100.0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLaccounts}}/accounts/1/withdraw",
							"host": [
								"{{baseURLaccounts}}"
							],
							"path": [
								"accounts",
								"1",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "account - delete by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURLaccounts}}/accounts/5",
							"host": [
								"{{baseURLaccounts}}"
							],
							"path": [
								"accounts",
								"5"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}