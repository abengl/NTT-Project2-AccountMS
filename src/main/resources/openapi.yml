openapi: 3.0.1
info:
  title: Banking System - Accounts Microservice
  description: API for managing accounts with CRUD operations
  contact:
    name: Alessandra Godoy
    email: dev@alessandragodoy.com
  version: 1.0.0
servers:
  - url: http://localhost:8086
    description: Generated server URL

paths:
  /api/accounts/{accountId}/withdraw:
    put:
      tags:
        - Account
      summary: Withdraw funds from an account
      description: Deducts the specified amount from the balance of the account with the provided ID.
      operationId: withdraw
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Withdrawal amount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawalRequestDTO'
        required: true
      responses:
        '200':
          description: Withdrawal successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
        '400':
          description: Invalid request or insufficient funds
        '404':
          description: Account not found

  /api/accounts/{accountId}/deposit:
    put:
      tags:
        - Account
      summary: Deposit funds into an account
      description: Adds the specified amount to the balance of the account with the provided ID.
      operationId: deposit
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Deposit amount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositRequestDTO'
        required: true
      responses:
        '200':
          description: Deposit successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
        '400':
          description: Invalid request
        '404':
          description: Account not found

  /api/accounts:
    get:
      tags:
        - Account
      summary: Retrieve all accounts
      description: Returns a list of all accounts.
      operationId: getAllAccounts
      responses:
        '200':
          description: List of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDTO'

    post:
      tags:
        - Account
      summary: Create a new account
      description: Creates a new account for a customer with an initial balance and account type.
      operationId: createAccount
      requestBody:
        description: Account details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountDTO'
        required: true
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'

  /api/accounts/{accountId}:
    get:
      tags:
        - Account
      summary: Retrieve account by ID
      description: Fetches details of a specific account by its ID.
      operationId: getAccountById
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Account details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
        '404':
          description: Account not found

    delete:
      tags:
        - Account
      summary: Delete account by ID
      description: Deletes an account by its ID.
      operationId: deleteAccountById
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Account deleted successfully
        '404':
          description: Account not found

  /api/accounts/customer/{customerId}:
    get:
      tags:
        - Account
      summary: Get accounts by customer ID
      description: Retrieves all accounts associated with a specific customer ID.
      operationId: getAccountByCustomerId
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of accounts for customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDTO'
        '404':
          description: Customer not found

components:
  schemas:
    WithdrawalRequestDTO:
      type: object
      properties:
        amount:
          type: number
          format: double
          example: 50.00

    DepositRequestDTO:
      type: object
      properties:
        amount:
          type: number
          format: double
          example: 100.00

    CreateAccountDTO:
      type: object
      properties:
        balance:
          type: number
          format: double
          example: 500.00
        accountType:
          type: string
          example: "SAVINGS"
        customerId:
          type: integer
          format: int32
          example: 12345

    AccountDTO:
      type: object
      properties:
        accountId:
          type: integer
          format: int32
          example: 98765
        accountNumber:
          type: string
          example: "A1234567891"
        balance:
          type: number
          format: double
          example: 450.00
        accountType:
          type: string
          example: "CHECKING"
        customerId:
          type: integer
          format: int32
          example: 12345
